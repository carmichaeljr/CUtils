NDSummary.OnToolTipsLoaded("CClass:GenericList",{5:"<div class=\"NDToolTip TClass LC\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype5\"><div class=\"CPEntry TClass Current\"><div class=\"CPModifiers\"><span class=\"SHKeyword\">typedef</span> <span class=\"SHKeyword\">struct</span></div><div class=\"CPName\">GenericList</div></div></div><div class=\"TTSummary\">The struct that represents a GenericList.</div></div>",18:"<div class=\"NDToolTip TVariable LC\"><div id=\"NDPrototype18\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">void</span> *list</div></div></div>",30:"<div class=\"NDToolTip TVariable LC\"><div id=\"NDPrototype30\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">int</span> listSize</div></div><div class=\"TTSummary\">Holds the actual size of the internal list.</div></div>",31:"<div class=\"NDToolTip TVariable LC\"><div id=\"NDPrototype31\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">bool</span> strictAlloc</div></div><div class=\"TTSummary\">Determines how memory is allocated.</div></div>",36:"<div class=\"NDToolTip TVariable LC\"><div id=\"NDPrototype36\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\"><span class=\"SHKeyword\">int</span> numElements</div></div><div class=\"TTSummary\">Holds how many elements are in the list, may or may not the same as the internal lists actual size.</div></div>",38:"<div class=\"NDToolTip TVariable LC\"><div id=\"NDPrototype38\" class=\"NDPrototype\"><div class=\"PSection PPlainSection\">size_t elementSize</div></div><div class=\"TTSummary\">Holds the element size so that pointer arithmetic can be performed with the void pointer.</div></div>"});