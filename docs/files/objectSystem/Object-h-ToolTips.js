NDContentPage.OnToolTipsLoaded({10:"<div class=\"NDToolTip TClass LC\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype10\"><div class=\"CPEntry TClass Current\"><div class=\"CPModifiers\"><span class=\"SHKeyword\">typedef</span> <span class=\"SHKeyword\">struct</span></div><div class=\"CPName\">String</div></div></div><div class=\"TTSummary\">The struct that represents a String.&nbsp; This class is for storing and manipulating Strings.&nbsp; General usage is as follows:</div></div>",15:"<div class=\"NDToolTip TClass LC\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype15\"><div class=\"CPEntry TClass Current\"><div class=\"CPModifiers\"><span class=\"SHKeyword\">extern const</span> <span class=\"SHKeyword\">struct</span></div><div class=\"CPName\">String_t</div></div></div><div class=\"TTSummary\">The struct that creates and performs operations on objects of type String.</div></div>",80:"<div class=\"NDToolTip TStruct LC\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype80\"><div class=\"CPEntry TStruct Current\"><div class=\"CPModifiers\"><span class=\"SHKeyword\">typedef</span> <span class=\"SHKeyword\">struct</span></div><div class=\"CPName\">Class</div></div></div><div class=\"TTSummary\">The struct that defines various memory related operations related to objects.&nbsp; Each struct of &lt;type&gt;_t needs to have a Class struct named &quot;class&quot; for the above macros to work.</div></div>",118:"<div class=\"NDToolTip TMacro LC\"><div id=\"NDPrototype118\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">new</span>(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PName first\">type,</td><td></td><td class=\"last\"></td></tr><tr><td class=\"PName first\">obj</td><td class=\"PDefaultValueSeparator\">&nbsp;=&nbsp;</td><td class=\"PDefaultValue last\">NULL</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">New is a function-macro that, given a type, creates a new object of that type.&nbsp; This macro is overloaded with a default parameter.&nbsp; If obj is NULL then memory will be allocated for the new object. If obj is not NULL then obj is treated as a pointer to memory already allocated for the new object.</div></div>",121:"<div class=\"NDToolTip TMacro LC\"><div id=\"NDPrototype121\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">delete</span>(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PName first\">type,</td><td></td><td class=\"last\"></td></tr><tr><td class=\"PName first\">obj,</td><td></td><td class=\"last\"></td></tr><tr><td class=\"PName first\">freeObj</td><td class=\"PDefaultValueSeparator\">&nbsp;=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHKeyword\">true</span></td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">Delete is a function-macro that, given a type and a preexisting object, deletes the object.&nbsp; This macro is overloaded through defining a default parameter.&nbsp; If freeObj is true then the memory allocated to the object will be freed. If obj is false then the memory allocated for the object will not be freed.</div></div>"});