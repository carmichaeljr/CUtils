NDContentPage.OnToolTipsLoaded({10:"<div class=\"NDToolTip TClass LC\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype10\"><div class=\"CPEntry TClass Current\"><div class=\"CPModifiers\"><span class=\"SHKeyword\">typedef</span> <span class=\"SHKeyword\">struct</span></div><div class=\"CPName\">String</div></div></div><div class=\"TTSummary\">The struct that represents a String.&nbsp; This class is for storing and manipulating Strings.&nbsp; General usage is as follows:</div></div>",15:"<div class=\"NDToolTip TClass LC\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype15\"><div class=\"CPEntry TClass Current\"><div class=\"CPModifiers\"><span class=\"SHKeyword\">extern const</span> <span class=\"SHKeyword\">struct</span></div><div class=\"CPName\">String_t</div></div></div><div class=\"TTSummary\">The struct that creates and performs operations on objects of type String.</div></div>",103:"<div class=\"NDToolTip TStruct LC\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype103\"><div class=\"CPEntry TStruct Current\"><div class=\"CPModifiers\"><span class=\"SHKeyword\">typedef</span> <span class=\"SHKeyword\">struct</span></div><div class=\"CPName\">ArithLogicOperators</div></div></div><div class=\"TTSummary\">The struct that defines various operator operations related to objects.&nbsp; Each struct of &lt;type&gt;_t needs to have a ArithLogicOperators struct named &quot;operators&quot; for the above macros to work.</div></div>",115:"<div class=\"NDToolTip TStruct LC\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype115\"><div class=\"CPEntry TStruct Current\"><div class=\"CPModifiers\"><span class=\"SHKeyword\">typedef</span> <span class=\"SHKeyword\">struct</span></div><div class=\"CPName\">ComparisonOperators</div></div></div><div class=\"TTSummary\">The struct that defines various equality related operations related to objects.&nbsp; Each struct of &lt;type&gt;_t needs to have a ComparisonOperator struct named &quot;comparisonOperators&quot; for the above macros to work.</div></div>",150:"<div class=\"NDToolTip TMacro LC\"><div id=\"NDPrototype150\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\">NOT(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PName first\">type,</td><td></td><td class=\"last\"></td></tr><tr><td class=\"PName first\">obj1,</td><td></td><td class=\"last\"></td></tr><tr><td class=\"PName first\">obj2</td><td class=\"PDefaultValueSeparator\">&nbsp;=&nbsp;</td><td class=\"PDefaultValue last\">obj1</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">Not is a function-macro that, given a type and two preexisting objects, computes the logical not of those objects. The types of the objects are determined by the implementation of the underlying not function in the ArithLogicOperators struct.&nbsp; If different types than the ones expected by that function are supplied then undefined behavior will occur.</div></div>"});