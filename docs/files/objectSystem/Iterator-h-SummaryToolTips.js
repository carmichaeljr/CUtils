NDSummary.OnToolTipsLoaded("File:objectSystem/Iterator.h",{106:"<div class=\"NDToolTip TMacro LC\"><div id=\"NDPrototype106\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\">iterBegin(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PName first\">type,</td><td></td><td class=\"last\"></td></tr><tr><td class=\"PName first\">collectionObj,</td><td></td><td class=\"last\"></td></tr><tr><td class=\"PName first\">iterObj</td><td class=\"PDefaultValueSeparator\">&nbsp;=&nbsp;</td><td class=\"PDefaultValue last\">NULL</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">This is a function-macro that, given a collection type and collection object, creates the appropriate iterator that represents the first object in the iteration sequence.&nbsp; This macro is overloaded with a default parameter.&nbsp; If iterObj is NULL then memory will be allocated for the new object. If obj is not NULL then obj is treated as a pointer to memory already allocated for the new object.</div></div>",107:"<div class=\"NDToolTip TMacro LC\"><div id=\"NDPrototype107\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\">iterNext(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PName first\">type,</td><td></td><td class=\"last\"></td></tr><tr><td class=\"PName first\">collectionObj,</td><td></td><td class=\"last\"></td></tr><tr><td class=\"PName first\">iterObj,</td><td></td><td class=\"last\"></td></tr><tr><td class=\"PName first\">num</td><td class=\"PDefaultValueSeparator\">&nbsp;=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHNumber\">1</span></td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">This is a function-macro that, given a collection type, collection object, and iterator object, advances the given iterator to represent the next element in the iteration sequence.&nbsp; This macro is overloaded with a default parameter.</div></div>",108:"<div class=\"NDToolTip TMacro LC\"><div id=\"NDPrototype108\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\">iterPrev(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PName first\">type,</td><td></td><td class=\"last\"></td></tr><tr><td class=\"PName first\">collectionObj,</td><td></td><td class=\"last\"></td></tr><tr><td class=\"PName first\">iterObj,</td><td></td><td class=\"last\"></td></tr><tr><td class=\"PName first\">num</td><td class=\"PDefaultValueSeparator\">&nbsp;=&nbsp;</td><td class=\"PDefaultValue last\"><span class=\"SHNumber\">1</span></td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">This is a function-macro that, given a collection type,collection object, and iterator object, regresses the given iterator to represent the previous element in the iteration sequence.&nbsp; This macro is overloaded with a default parameter.</div></div>",109:"<div class=\"NDToolTip TMacro LC\"><div id=\"NDPrototype109\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\">iterVal(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PName first last\">type,</td></tr><tr><td class=\"PName first last\">collectionObj,</td></tr><tr><td class=\"PName first last\">iterObj</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">This is a function-macro that, given a collection type, collection object, and iterator object, returns a void pointer to the element the iterator is currently at in the iteration sequence.</div></div>",110:"<div class=\"NDToolTip TMacro LC\"><div id=\"NDPrototype110\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\">forEach(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PName first last\">type,</td></tr><tr><td class=\"PName first last\">subType,</td></tr><tr><td class=\"PName first last\">collectionObj,</td></tr><tr><td class=\"PName first last\">loopCode</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">forEach is a function-macro that, given a collection type, the type of the items in the collection, a collection object, and code to perform on each element, will loop through the collection using iterators and run the supplied code on every element.</div></div>",98:"<div class=\"NDToolTip TMacro LC\"><div id=\"NDPrototype98\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\">DEFAULT_ITERATOR {</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PSymbols first\">.</td><td class=\"PName\">begin</td><td class=\"PDefaultValueSeparator\">&nbsp;=&nbsp;</td><td class=\"PDefaultValue last\">begin,</td></tr><tr><td class=\"PSymbols first\">.</td><td class=\"PName\">increment</td><td class=\"PDefaultValueSeparator\">&nbsp;=&nbsp;</td><td class=\"PDefaultValue last\">increment,</td></tr><tr><td class=\"PSymbols first\">.</td><td class=\"PName\">dincrement</td><td class=\"PDefaultValueSeparator\">&nbsp;=&nbsp;</td><td class=\"PDefaultValue last\">dincrement,</td></tr><tr><td class=\"PSymbols first\">.</td><td class=\"PName\">end</td><td class=\"PDefaultValueSeparator\">&nbsp;=&nbsp;</td><td class=\"PDefaultValue last\">end,</td></tr><tr><td class=\"PSymbols first\">.</td><td class=\"PName\">getVal</td><td class=\"PDefaultValueSeparator\">&nbsp;=&nbsp;</td><td class=\"PDefaultValue last\">getVal,</td></tr><tr><td class=\"first\"></td><td></td><td></td><td class=\"last\"></td></tr></table></td><td class=\"PAfterParameters\">}</td></tr></table></div></div><div class=\"TTSummary\">DEFAULT_ITERATOR is a macro that defines class functions to support iteration over data structures.</div></div>",39:"<div class=\"NDToolTip TStruct LC\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype39\"><div class=\"CPEntry TStruct Current\"><div class=\"CPModifiers\"><span class=\"SHKeyword\">typedef</span> <span class=\"SHKeyword\">struct</span></div><div class=\"CPName\">Iterator</div></div></div><div class=\"TTSummary\">The struct that defines various operations related to iteration over collections.&nbsp; Each struct of &lt;type&gt;_t needs to have a Iterator struct named &quot;iterator&quot; for the above macros to work.</div></div>",113:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype113\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span>* (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PSymbols first\">*</td><td class=\"PName last\">begin</td></tr></table></td><td class=\"PAfterParameters\">)(<span class=\"SHKeyword\">const void</span> * <span class=\"SHKeyword\">const</span> obj, <span class=\"SHKeyword\">void</span> *iterator)</td></tr></table></div></div><div class=\"TTSummary\">Responsible to returning an initialized iterator to the first element of the collection.</div></div>",114:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype114\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PSymbols first\">*</td><td class=\"PName last\">increment</td></tr></table></td><td class=\"PAfterParameters\">)(<span class=\"SHKeyword\">const void</span> * <span class=\"SHKeyword\">const</span> obj, <span class=\"SHKeyword\">void</span> *iterator, <span class=\"SHKeyword\">const int</span> num)</td></tr></table></div></div><div class=\"TTSummary\">Responsible for advancing the iterator forward by the given number of elements.</div></div>",115:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype115\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PSymbols first\">*</td><td class=\"PName last\">dincrement</td></tr></table></td><td class=\"PAfterParameters\">)(<span class=\"SHKeyword\">const void</span> * <span class=\"SHKeyword\">const</span> obj, <span class=\"SHKeyword\">void</span> *iterator, <span class=\"SHKeyword\">const int</span> num)</td></tr></table></div></div><div class=\"TTSummary\">Responsible for advancing the iterator backward by the given number of elements.</div></div>",116:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype116\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span>* (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PSymbols first\">*</td><td class=\"PName last\">end</td></tr></table></td><td class=\"PAfterParameters\">)(<span class=\"SHKeyword\">const void</span> * <span class=\"SHKeyword\">const</span> obj, <span class=\"SHKeyword\">void</span> *iterator)</td></tr></table></div></div><div class=\"TTSummary\">Responsible to returning an initialized iterator to the last element of the collection.</div></div>",117:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype117\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span>* (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PSymbols first\">*</td><td class=\"PName last\">getVal</td></tr></table></td><td class=\"PAfterParameters\">)(<span class=\"SHKeyword\">const void</span> * <span class=\"SHKeyword\">const</span> obj, <span class=\"SHKeyword\">const void</span> * <span class=\"SHKeyword\">const</span> iterator)</td></tr></table></div></div><div class=\"TTSummary\">Returns a void pointer to the value of the element at the iterators location.</div></div>"});