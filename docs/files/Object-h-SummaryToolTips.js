NDSummary.OnToolTipsLoaded("File:Object.h",{23:"<div class=\"NDToolTip TMacro LC\"><div id=\"NDPrototype23\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">new</span>(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PName first last\">type</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">New is a function-macro that, given a type, creates a new object of that type.</div></div>",64:"<div class=\"NDToolTip TMacro LC\"><div id=\"NDPrototype64\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\">copy(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PName first last\">type,</td></tr><tr><td class=\"PName first last\">obj</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">Copy is a function-macro that, given a type and a preexisting object, creates a copy of the object.</div></div>",68:"<div class=\"NDToolTip TMacro LC\"><div id=\"NDPrototype68\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">delete</span>(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PName first last\">type,</td></tr><tr><td class=\"PName first last\">obj</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">Delete is a function-macro that, given a type and a preexisting object, deletes the object.</div></div>",69:"<div class=\"NDToolTip TMacro LC\"><div id=\"NDPrototype69\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\">equals(</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PName first last\">type,</td></tr><tr><td class=\"PName first last\">obj1,</td></tr><tr><td class=\"PName first last\">obj2</td></tr></table></td><td class=\"PAfterParameters\">)</td></tr></table></div></div><div class=\"TTSummary\">Equals is a function-macro that, given a type and a preexisting object, compares the two objects. The return value is defined by the implementation of the comparator in the &lt;type&gt;_t struct.</div></div>",70:"<div class=\"NDToolTip TMacro LC\"><div id=\"NDPrototype70\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\">DEFAULT_CLASS {</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PSymbols first\">.</td><td class=\"PName\">allocator</td><td class=\"PDefaultValueSeparator\">&nbsp;=&nbsp;</td><td class=\"PDefaultValue last\">malloc,</td></tr><tr><td class=\"PSymbols first\">.</td><td class=\"PName\">constructor</td><td class=\"PDefaultValueSeparator\">&nbsp;=&nbsp;</td><td class=\"PDefaultValue last\">constructor,</td></tr><tr><td class=\"PSymbols first\">.</td><td class=\"PName\">copyConstructor</td><td class=\"PDefaultValueSeparator\">&nbsp;=&nbsp;</td><td class=\"PDefaultValue last\">memcpy,</td></tr><tr><td class=\"PSymbols first\">.</td><td class=\"PName\">destructor</td><td class=\"PDefaultValueSeparator\">&nbsp;=&nbsp;</td><td class=\"PDefaultValue last\">destructor,</td></tr><tr><td class=\"PSymbols first\">.</td><td class=\"PName\">equals</td><td class=\"PDefaultValueSeparator\">&nbsp;=&nbsp;</td><td class=\"PDefaultValue last\">memcmp,</td></tr><tr><td class=\"first\"></td><td></td><td></td><td class=\"last\"></td></tr></table></td><td class=\"PAfterParameters\">}</td></tr></table></div></div><div class=\"TTSummary\">DEFAULT_CLASS is a macro that defines default allocator, copyConstructor, and equals functions.</div></div>",71:"<div class=\"NDToolTip TStruct LC\"><div class=\"NDClassPrototype\" id=\"NDClassPrototype71\"><div class=\"CPEntry TStruct Current\"><div class=\"CPModifiers\"><span class=\"SHKeyword\">typedef</span> <span class=\"SHKeyword\">struct</span></div><div class=\"CPName\">Class</div></div></div><div class=\"TTSummary\">The struct that defines various memory related operations related to objects.&nbsp; Each struct of &lt;type&gt;_t needs to have a Class struct named &quot;class&quot; for the above macros to work.</div></div>",16:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype16\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span>* (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PSymbols first\">*</td><td class=\"PName last\">allocator</td></tr></table></td><td class=\"PAfterParameters\">)(size_t size)</td></tr></table></div></div><div class=\"TTSummary\">Responsible for allocating space for the object.</div></div>",17:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype17\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PSymbols first\">*</td><td class=\"PName last\">constructor</td></tr></table></td><td class=\"PAfterParameters\">)(<span class=\"SHKeyword\">void</span> *obj)</td></tr></table></div></div><div class=\"TTSummary\">Responsible for initializing an already allocated object.</div></div>",20:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype20\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span>* (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PSymbols first\">*</td><td class=\"PName last\">copyConstructor</td></tr></table></td><td class=\"PAfterParameters\">)(<span class=\"SHKeyword\">void</span> *obj, <span class=\"SHKeyword\">const void</span> * <span class=\"SHKeyword\">const</span> other, size_t size)</td></tr></table></div></div><div class=\"TTSummary\">Responsible for creating a clone of another object.</div></div>",62:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype62\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">void</span> (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PSymbols first\">*</td><td class=\"PName last\">destructor</td></tr></table></td><td class=\"PAfterParameters\">)(<span class=\"SHKeyword\">void</span> *obj)</td></tr></table></div></div><div class=\"TTSummary\">Responsible for deleting and freeing memory allocated for the given object.</div></div>",65:"<div class=\"NDToolTip TFunction LC\"><div id=\"NDPrototype65\" class=\"NDPrototype WideForm\"><div class=\"PSection PParameterSection CStyle\"><table><tr><td class=\"PBeforeParameters\"><span class=\"SHKeyword\">int</span> (</td><td class=\"PParametersParentCell\"><table class=\"PParameters\"><tr><td class=\"PSymbols first\">*</td><td class=\"PName last\">comparator</td></tr></table></td><td class=\"PAfterParameters\">)(<span class=\"SHKeyword\">const void</span> *first, <span class=\"SHKeyword\">const void</span> *second, size_t size)</td></tr></table></div></div><div class=\"TTSummary\">Responsible for comparing two objects of the same type.</div></div>"});